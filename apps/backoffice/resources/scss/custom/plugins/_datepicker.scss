//
// Datepicker
//
// flatpickr


.flatpickr-input {
  &[readonly] {
      background-color: $input-bg;
  }
}

.flatpickr-months,
.flatpickr-weekdays {
  background-color: $primary;
}

span.flatpickr-weekday {
  color: $white;
  font-weight: $font-weight-medium;
}

.flatpickr-current-month {
  .flatpickr-monthDropdown-months {
      &:hover {
          background-color: transparent !important;
      }
  }
}

.flatpickr-am-pm,
.numInput,
.numInputWrapper {
  &:focus,
  &:hover {
      background-color: transparent !important;
  }
}

.flatpickr-weekdays {
  height: 36px !important;
  border-bottom: 1px solid var(--#{$prefix}border-color);
}

.flatpickr-day {
  color: rgba(var(--#{$prefix}dark), 0.3) !important;
  
  &:hover,
  &:focus {
      background-color: rgba($light, 0.7) !important;
      color: rgba(var(--#{$prefix}dark), 0.8) !important;
      border-color: rgba($primary, 0.3) !important;
  }
  
  &.today {
      border-color: $primary !important;
      background-color: rgba($primary, 0.1);
      color: $primary !important;
      
      &:hover,
      &:focus {
          color: $primary !important;
          background-color: rgba($primary, 0.15) !important;
      }
  }
  
  // Selected dates (start and end of range)
  &.selected,
  &.startRange,
  &.endRange {
      background-color: $primary !important;
      border-color: $primary !important;
      color: $white !important;

      &:hover {
          background-color: $primary !important;
          color: $white !important;
      }
  }

  &.flatpickr-disabled,
  &.flatpickr-disabled:hover,
  &.prevMonthDay,
  &.nextMonthDay,
  &.notAllowed,
  &.notAllowed.prevMonthDay,
  &.notAllowed.nextMonthDay {
      color: var(--#{$prefix}tertiary-color) !important;
  }

  // Days in range (between start and end dates)
  &.inRange {
      background-color: rgba($primary, 0.15) !important;
      border-color: rgba($primary, 0.2) !important;
      color: rgba(var(--#{$prefix}dark), 0.8) !important;
      // Fixed syntax error: added space after '0'
      box-shadow: -5px 0 0 rgba($primary, 0.15), 5px 0 0 rgba($primary, 0.15);
      
      &:hover,
      &:focus {
          background-color: rgba($primary, 0.25) !important;
          border-color: rgba($primary, 0.3) !important;
      }
  }
  
  // Override generic hover states for non-range days
  &:not(.inRange):not(.selected):not(.startRange):not(.endRange) {
      &:hover,
      &:focus {
          background-color: rgba($light, 0.7) !important;
          border-color: rgba($primary, 0.3) !important;
      }
  }
}

.flatpickr-months {
  .flatpickr-prev-month,
  .flatpickr-next-month,
  .flatpickr-month {
      color: rgba($white, 0.9) !important;
      fill: rgba($white, 0.9) !important;
  }
}

.flatpickr-monthDropdown-month {
  color: rgba($black, 0.8);
}
.flatpickr-current-month {
  input.cur-year {
      &[disabled],
      &[disabled]:hover {
          color: rgba($white, 0.9) !important;
      }
  }
}

.flatpickr-time {
  input,
  .flatpickr-time-separator,
  .flatpickr-am-pm {
      color: var(--#{$prefix}dark) !important;
  }
}

.flatpickr-calendar {
  background-color: $dropdown-bg !important;
  box-shadow: 1px 0 0 var(--#{$prefix}border-color), -1px 0 0 var(--#{$prefix}border-color), 0 1px 0 var(--#{$prefix}border-color), 0 -1px 0 var(--#{$prefix}border-color),
      0 3px 13px rgba(0, 0, 0, 0.08) !important;
  &.hasTime {
      .flatpickr-time {
          border-top: 1px solid var(--#{$prefix}border-color) !important;
      }
  }
}

.flatpickr-months {
  border-radius: 5px 5px 0px 0px;
  .flatpickr-prev-month,
  .flatpickr-next-month {
      &:hover {
          svg {
              fill: rgba($white, 0.9) !important;
          }
      }
  }
}
