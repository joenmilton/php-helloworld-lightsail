name: Deploy to Lightsail

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Lightsail
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: bitnami
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        script: |
          # Create apps and backoffice directories if they don't exist
          sudo mkdir -p /opt/bitnami/apache/apps/
          sudo mkdir -p /opt/bitnami/apache/apps/backoffice/
          cd /opt/bitnami/apache/apps/
          sudo chown bitnami:root /opt/bitnami/apache/apps/
          sudo chmod 775 /opt/bitnami/apache/apps/
          
          # Remove all files except backoffice directory
          sudo find . -maxdepth 1 ! -name '.' ! -name 'backoffice' -exec rm -rf {} +
          
          # Cleanup inside backoffice directory (preserve storage, .env)
          cd backoffice/
          sudo find . -maxdepth 1 ! -name '.' ! -name 'storage' ! -name '.env' -exec rm -rf {} +
          cd ..
          
    - name: Upload all files to temp location
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: bitnami
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        source: "apps/*"
        target: "/tmp/deploy/"
        
    - name: Copy non-backoffice files
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: bitnami
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        script: |
          cd /opt/bitnami/apache/apps/
          
          # Copy all files/directories from apps except backoffice
          for item in /tmp/deploy/apps/*; do
            if [ -e "$item" ] && [ "$(basename "$item")" != "backoffice" ]; then
              sudo cp -r "$item" . 2>/dev/null || echo "Failed to copy $(basename "$item")"
            fi
          done
        
    - name: Copy backoffice files conditionally
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: bitnami
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        script: |
          cd /opt/bitnami/apache/apps/backoffice/
          
          # Copy storage, .env only if they don't exist
          if [[ ! -e "storage" ]] && [[ -d "/tmp/deploy/apps/backoffice/storage" ]]; then
            sudo cp -r /tmp/deploy/apps/backoffice/storage . 2>/dev/null || echo "No storage in source"
          fi
          if [[ ! -e ".env" ]] && [[ -f "/tmp/deploy/apps/backoffice/.env" ]]; then
            sudo cp /tmp/deploy/apps/backoffice/.env . 2>/dev/null || echo "No .env in source"
          fi
          
    - name: Copy other backoffice files
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: bitnami
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        script: |
          cd /opt/bitnami/apache/apps/backoffice/
          
          # Copy all files/directories from backoffice except storage, .env
          for item in /tmp/deploy/apps/backoffice/*; do
            if [ -e "$item" ]; then
              basename_item=$(basename "$item")
              if [ "$basename_item" != "storage" ] && [ "$basename_item" != ".env" ]; then
                sudo cp -r "$item" . 2>/dev/null || echo "Failed to copy $basename_item"
              fi
            fi
          done
        
    - name: Install Node.js on Lightsail
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: bitnami
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        script: |
          if ! command -v node >/dev/null 2>&1; then
            echo "Node.js not found. Installing..."
            # Download and install Node.js v20.11.1
            cd /tmp
            wget https://nodejs.org/dist/v20.11.1/node-v20.11.1-linux-x64.tar.xz
            sudo mkdir -p /opt/nodejs
            sudo tar -xJvf node-v20.11.1-linux-x64.tar.xz -C /opt/nodejs --strip-components=1
            
            # Create global links
            sudo ln -sf /opt/nodejs/bin/node /usr/bin/node
            sudo ln -sf /opt/nodejs/bin/npm /usr/bin/npm
            
            # Cleanup
            rm node-v20.11.1-linux-x64.tar.xz
            
            # Install PM2 globally
            sudo /opt/nodejs/bin/npm install -g pm2
            sudo ln -sf /opt/nodejs/bin/pm2 /usr/bin/pm2
            
            echo "Node.js v20.11.1 and PM2 installed successfully!"
          else
            echo "Node.js already installed. Skipping installation."
          fi
          
          node -v
          npm -v
          pm2 -v
        
    - name: Process vhosts files
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: bitnami
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        script: |
          # Create apache conf vhosts directory
          sudo mkdir -p /opt/bitnami/apache/conf/vhosts/
          
          # Process vhosts files if they exist
          if [ -d "/opt/bitnami/apache/apps/vhosts" ]; then
            cd /opt/bitnami/apache/apps/vhosts/
            for file in *; do
              if [ -f "$file" ] && [ ! -f "/opt/bitnami/apache/conf/vhosts/$file" ]; then
                sudo cp "$file" "/opt/bitnami/apache/conf/vhosts/"
                echo "Copied $file to apache conf vhosts"
              fi
            done
            
            # Remove vhosts directory from apps
            cd ..
            sudo rm -rf vhosts/
          fi
        
    - name: Restart Apache
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: bitnami
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        script: |
          # Set bitnami:root permissions for Apache directories
          sudo chown bitnami:root /opt/bitnami/apache/apps/
          sudo chown -R bitnami:root /opt/bitnami/apache/conf/
          sudo chown -R bitnami:root /opt/bitnami/apache/htdocs/
          sudo mkdir -p /opt/bitnami/apache/office/
          sudo chown -R bitnami:root /opt/bitnami/apache/office/
          
          # Set bitnami:bitnami for all content inside apps
          sudo chown -R bitnami:bitnami /opt/bitnami/apache/apps/*
          sudo chmod -R 755 /opt/bitnami/apache/apps/
          
          # Run postprocess scripts
          if [ -d "/opt/bitnami/apache/apps/postprocess" ]; then
            cd /opt/bitnami/apache/apps/postprocess/
            for script in *.sh; do
              if [ -f "$script" ]; then
                chmod +x "$script"
                ./$script
              fi
            done
          fi

          # Remove db directory
          if [ -d "/opt/bitnami/apache/apps/db" ]; then
            sudo rm -rf /opt/bitnami/apache/apps/db/
          fi

          # Restart Apache
          sudo /opt/bitnami/ctlscript.sh restart apache